import destr from "destr";
import defu from "defu";
const _runtimeConfig = process.env.RUNTIME_CONFIG;
for (const type of ["private", "public"]) {
  for (const key in _runtimeConfig[type]) {
    _runtimeConfig[type][key] = destr(process.env[key] || _runtimeConfig[type][key]);
  }
}
export const privateConfig = deepFreeze(defu(_runtimeConfig.private, _runtimeConfig.public));
export const publicConfig = deepFreeze(_runtimeConfig.public);
export default privateConfig;
function deepFreeze(object) {
  const propNames = Object.getOwnPropertyNames(object);
  for (const name of propNames) {
    const value = object[name];
    if (value && typeof value === "object") {
      deepFreeze(value);
    }
  }
  return Object.freeze(object);
}
