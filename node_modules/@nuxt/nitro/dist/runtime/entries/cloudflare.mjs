import "#polyfill";
import { getAssetFromKV } from "@cloudflare/kv-asset-handler";
import { localCall } from "../server/index.mjs";
import { requestHasBody, useRequestBody } from "../server/utils.mjs";
const PUBLIC_PATH = process.env.PUBLIC_PATH;
addEventListener("fetch", (event) => {
  event.respondWith(handleEvent(event));
});
async function handleEvent(event) {
  try {
    return await getAssetFromKV(event, { cacheControl: assetsCacheControl });
  } catch (_err) {
  }
  const url = new URL(event.request.url);
  let body;
  if (requestHasBody(event.request)) {
    body = await useRequestBody(event.request);
  }
  const r = await localCall({
    event,
    url: url.pathname + url.search,
    host: url.hostname,
    protocol: url.protocol,
    headers: event.request.headers,
    method: event.request.method,
    redirect: event.request.redirect,
    body
  });
  return new Response(r.body, {
    headers: r.headers,
    status: r.status,
    statusText: r.statusText
  });
}
function assetsCacheControl(request) {
  if (request.url.includes(PUBLIC_PATH)) {
    return {
      browserTTL: 31536e3,
      edgeTTL: 31536e3
    };
  }
  return {};
}
