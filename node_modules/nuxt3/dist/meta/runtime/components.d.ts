export declare const Script: import("vue").DefineComponent<{
    async: BooleanConstructor;
    crossorigin: {
        type: (StringConstructor | BooleanConstructor)[];
        default: any;
    };
    defer: BooleanConstructor;
    integrity: StringConstructor;
    nomodule: BooleanConstructor;
    nonce: StringConstructor;
    referrerpolicy: StringConstructor;
    src: StringConstructor;
    type: StringConstructor;
    /** @deprecated **/
    charset: StringConstructor;
    /** @deprecated **/
    language: StringConstructor;
    accesskey: StringConstructor;
    autocapitalize: StringConstructor;
    autofocus: {
        type: BooleanConstructor;
        default: any;
    };
    class: StringConstructor;
    contenteditable: {
        type: BooleanConstructor;
        default: any;
    };
    contextmenu: StringConstructor;
    dir: StringConstructor;
    draggable: {
        type: BooleanConstructor;
        default: any;
    };
    enterkeyhint: StringConstructor;
    exportparts: StringConstructor;
    hidden: {
        type: BooleanConstructor;
        default: any;
    };
    id: StringConstructor;
    inputmode: StringConstructor;
    is: StringConstructor;
    itemid: StringConstructor;
    itemprop: StringConstructor;
    itemref: StringConstructor;
    itemscope: StringConstructor;
    itemtype: StringConstructor;
    lang: StringConstructor;
    part: StringConstructor;
    slot: StringConstructor;
    spellcheck: {
        type: BooleanConstructor;
        default: any;
    };
    style: StringConstructor;
    tabindex: StringConstructor;
    title: StringConstructor;
    translate: StringConstructor;
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>[], unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    async?: unknown;
    crossorigin?: unknown;
    defer?: unknown;
    integrity?: unknown;
    nomodule?: unknown;
    nonce?: unknown;
    referrerpolicy?: unknown;
    src?: unknown;
    type?: unknown;
    charset?: unknown;
    language?: unknown;
    accesskey?: unknown;
    autocapitalize?: unknown;
    autofocus?: unknown;
    class?: unknown;
    contenteditable?: unknown;
    contextmenu?: unknown;
    dir?: unknown;
    draggable?: unknown;
    enterkeyhint?: unknown;
    exportparts?: unknown;
    hidden?: unknown;
    id?: unknown;
    inputmode?: unknown;
    is?: unknown;
    itemid?: unknown;
    itemprop?: unknown;
    itemref?: unknown;
    itemscope?: unknown;
    itemtype?: unknown;
    lang?: unknown;
    part?: unknown;
    slot?: unknown;
    spellcheck?: unknown;
    style?: unknown;
    tabindex?: unknown;
    title?: unknown;
    translate?: unknown;
} & {
    async: boolean;
    defer: boolean;
    nomodule: boolean;
} & {
    crossorigin?: string | boolean;
    integrity?: string;
    nonce?: string;
    referrerpolicy?: string;
    src?: string;
    type?: string;
    charset?: string;
    language?: string;
    accesskey?: string;
    autocapitalize?: string;
    autofocus?: boolean;
    class?: string;
    contenteditable?: boolean;
    contextmenu?: string;
    dir?: string;
    draggable?: boolean;
    enterkeyhint?: string;
    exportparts?: string;
    hidden?: boolean;
    id?: string;
    inputmode?: string;
    is?: string;
    itemid?: string;
    itemprop?: string;
    itemref?: string;
    itemscope?: string;
    itemtype?: string;
    lang?: string;
    part?: string;
    slot?: string;
    spellcheck?: boolean;
    style?: string;
    tabindex?: string;
    title?: string;
    translate?: string;
}>, {
    async: boolean;
    crossorigin: string | boolean;
    defer: boolean;
    nomodule: boolean;
    autofocus: boolean;
    contenteditable: boolean;
    draggable: boolean;
    hidden: boolean;
    spellcheck: boolean;
}>;
export declare const Link: import("vue").DefineComponent<{
    as: StringConstructor;
    crossorigin: StringConstructor;
    disabled: BooleanConstructor;
    href: StringConstructor;
    hreflang: StringConstructor;
    imagesizes: StringConstructor;
    imagesrcset: StringConstructor;
    integrity: StringConstructor;
    media: StringConstructor;
    prefetch: {
        type: BooleanConstructor;
        default: any;
    };
    referrerpolicy: StringConstructor;
    rel: StringConstructor;
    sizes: StringConstructor;
    title: StringConstructor;
    type: StringConstructor;
    /** @deprecated **/
    methods: StringConstructor;
    /** @deprecated **/
    target: StringConstructor;
    accesskey: StringConstructor;
    autocapitalize: StringConstructor;
    autofocus: {
        type: BooleanConstructor;
        default: any;
    };
    class: StringConstructor;
    contenteditable: {
        type: BooleanConstructor;
        default: any;
    };
    contextmenu: StringConstructor;
    dir: StringConstructor;
    draggable: {
        type: BooleanConstructor;
        default: any;
    };
    enterkeyhint: StringConstructor;
    exportparts: StringConstructor;
    hidden: {
        type: BooleanConstructor;
        default: any;
    };
    id: StringConstructor;
    inputmode: StringConstructor;
    is: StringConstructor;
    itemid: StringConstructor;
    itemprop: StringConstructor;
    itemref: StringConstructor;
    itemscope: StringConstructor;
    itemtype: StringConstructor;
    lang: StringConstructor;
    nonce: StringConstructor;
    part: StringConstructor;
    slot: StringConstructor;
    spellcheck: {
        type: BooleanConstructor;
        default: any;
    };
    style: StringConstructor;
    tabindex: StringConstructor;
    translate: StringConstructor;
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>[], unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    as?: unknown;
    crossorigin?: unknown;
    disabled?: unknown;
    href?: unknown;
    hreflang?: unknown;
    imagesizes?: unknown;
    imagesrcset?: unknown;
    integrity?: unknown;
    media?: unknown;
    prefetch?: unknown;
    referrerpolicy?: unknown;
    rel?: unknown;
    sizes?: unknown;
    title?: unknown;
    type?: unknown;
    methods?: unknown;
    target?: unknown;
    accesskey?: unknown;
    autocapitalize?: unknown;
    autofocus?: unknown;
    class?: unknown;
    contenteditable?: unknown;
    contextmenu?: unknown;
    dir?: unknown;
    draggable?: unknown;
    enterkeyhint?: unknown;
    exportparts?: unknown;
    hidden?: unknown;
    id?: unknown;
    inputmode?: unknown;
    is?: unknown;
    itemid?: unknown;
    itemprop?: unknown;
    itemref?: unknown;
    itemscope?: unknown;
    itemtype?: unknown;
    lang?: unknown;
    nonce?: unknown;
    part?: unknown;
    slot?: unknown;
    spellcheck?: unknown;
    style?: unknown;
    tabindex?: unknown;
    translate?: unknown;
} & {
    disabled: boolean;
} & {
    methods?: string;
    crossorigin?: string;
    integrity?: string;
    nonce?: string;
    referrerpolicy?: string;
    type?: string;
    accesskey?: string;
    autocapitalize?: string;
    autofocus?: boolean;
    class?: string;
    contenteditable?: boolean;
    contextmenu?: string;
    dir?: string;
    draggable?: boolean;
    enterkeyhint?: string;
    exportparts?: string;
    hidden?: boolean;
    id?: string;
    inputmode?: string;
    is?: string;
    itemid?: string;
    itemprop?: string;
    itemref?: string;
    itemscope?: string;
    itemtype?: string;
    lang?: string;
    part?: string;
    slot?: string;
    spellcheck?: boolean;
    style?: string;
    tabindex?: string;
    title?: string;
    translate?: string;
    as?: string;
    href?: string;
    hreflang?: string;
    imagesizes?: string;
    imagesrcset?: string;
    media?: string;
    prefetch?: boolean;
    rel?: string;
    sizes?: string;
    target?: string;
}>, {
    autofocus: boolean;
    contenteditable: boolean;
    draggable: boolean;
    hidden: boolean;
    spellcheck: boolean;
    disabled: boolean;
    prefetch: boolean;
}>;
export declare const Base: import("vue").DefineComponent<{
    href: StringConstructor;
    target: StringConstructor;
    accesskey: StringConstructor;
    autocapitalize: StringConstructor;
    autofocus: {
        type: BooleanConstructor;
        default: any;
    };
    class: StringConstructor;
    contenteditable: {
        type: BooleanConstructor;
        default: any;
    };
    contextmenu: StringConstructor;
    dir: StringConstructor;
    draggable: {
        type: BooleanConstructor;
        default: any;
    };
    enterkeyhint: StringConstructor;
    exportparts: StringConstructor;
    hidden: {
        type: BooleanConstructor;
        default: any;
    };
    id: StringConstructor;
    inputmode: StringConstructor;
    is: StringConstructor;
    itemid: StringConstructor;
    itemprop: StringConstructor;
    itemref: StringConstructor;
    itemscope: StringConstructor;
    itemtype: StringConstructor;
    lang: StringConstructor;
    nonce: StringConstructor;
    part: StringConstructor;
    slot: StringConstructor;
    spellcheck: {
        type: BooleanConstructor;
        default: any;
    };
    style: StringConstructor;
    tabindex: StringConstructor;
    title: StringConstructor;
    translate: StringConstructor;
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>[], unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    href?: unknown;
    target?: unknown;
    accesskey?: unknown;
    autocapitalize?: unknown;
    autofocus?: unknown;
    class?: unknown;
    contenteditable?: unknown;
    contextmenu?: unknown;
    dir?: unknown;
    draggable?: unknown;
    enterkeyhint?: unknown;
    exportparts?: unknown;
    hidden?: unknown;
    id?: unknown;
    inputmode?: unknown;
    is?: unknown;
    itemid?: unknown;
    itemprop?: unknown;
    itemref?: unknown;
    itemscope?: unknown;
    itemtype?: unknown;
    lang?: unknown;
    nonce?: unknown;
    part?: unknown;
    slot?: unknown;
    spellcheck?: unknown;
    style?: unknown;
    tabindex?: unknown;
    title?: unknown;
    translate?: unknown;
} & {} & {
    nonce?: string;
    accesskey?: string;
    autocapitalize?: string;
    autofocus?: boolean;
    class?: string;
    contenteditable?: boolean;
    contextmenu?: string;
    dir?: string;
    draggable?: boolean;
    enterkeyhint?: string;
    exportparts?: string;
    hidden?: boolean;
    id?: string;
    inputmode?: string;
    is?: string;
    itemid?: string;
    itemprop?: string;
    itemref?: string;
    itemscope?: string;
    itemtype?: string;
    lang?: string;
    part?: string;
    slot?: string;
    spellcheck?: boolean;
    style?: string;
    tabindex?: string;
    title?: string;
    translate?: string;
    href?: string;
    target?: string;
}>, {
    autofocus: boolean;
    contenteditable: boolean;
    draggable: boolean;
    hidden: boolean;
    spellcheck: boolean;
}>;
export declare const Title: import("vue").DefineComponent<{}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>[], {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{} & {} & {}>, {}>;
export declare const Meta: import("vue").DefineComponent<{
    charset: StringConstructor;
    content: StringConstructor;
    httpEquiv: StringConstructor;
    key: StringConstructor;
    name: StringConstructor;
    accesskey: StringConstructor;
    autocapitalize: StringConstructor;
    autofocus: {
        type: BooleanConstructor;
        default: any;
    };
    class: StringConstructor;
    contenteditable: {
        type: BooleanConstructor;
        default: any;
    };
    contextmenu: StringConstructor;
    dir: StringConstructor;
    draggable: {
        type: BooleanConstructor;
        default: any;
    };
    enterkeyhint: StringConstructor;
    exportparts: StringConstructor;
    hidden: {
        type: BooleanConstructor;
        default: any;
    };
    id: StringConstructor;
    inputmode: StringConstructor;
    is: StringConstructor;
    itemid: StringConstructor;
    itemprop: StringConstructor;
    itemref: StringConstructor;
    itemscope: StringConstructor;
    itemtype: StringConstructor;
    lang: StringConstructor;
    nonce: StringConstructor;
    part: StringConstructor;
    slot: StringConstructor;
    spellcheck: {
        type: BooleanConstructor;
        default: any;
    };
    style: StringConstructor;
    tabindex: StringConstructor;
    title: StringConstructor;
    translate: StringConstructor;
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>[], unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    charset?: unknown;
    content?: unknown;
    httpEquiv?: unknown;
    key?: unknown;
    name?: unknown;
    accesskey?: unknown;
    autocapitalize?: unknown;
    autofocus?: unknown;
    class?: unknown;
    contenteditable?: unknown;
    contextmenu?: unknown;
    dir?: unknown;
    draggable?: unknown;
    enterkeyhint?: unknown;
    exportparts?: unknown;
    hidden?: unknown;
    id?: unknown;
    inputmode?: unknown;
    is?: unknown;
    itemid?: unknown;
    itemprop?: unknown;
    itemref?: unknown;
    itemscope?: unknown;
    itemtype?: unknown;
    lang?: unknown;
    nonce?: unknown;
    part?: unknown;
    slot?: unknown;
    spellcheck?: unknown;
    style?: unknown;
    tabindex?: unknown;
    title?: unknown;
    translate?: unknown;
} & {} & {
    name?: string;
    nonce?: string;
    charset?: string;
    accesskey?: string;
    autocapitalize?: string;
    autofocus?: boolean;
    class?: string;
    contenteditable?: boolean;
    contextmenu?: string;
    dir?: string;
    draggable?: boolean;
    enterkeyhint?: string;
    exportparts?: string;
    hidden?: boolean;
    id?: string;
    inputmode?: string;
    is?: string;
    itemid?: string;
    itemprop?: string;
    itemref?: string;
    itemscope?: string;
    itemtype?: string;
    lang?: string;
    part?: string;
    slot?: string;
    spellcheck?: boolean;
    style?: string;
    tabindex?: string;
    title?: string;
    translate?: string;
    content?: string;
    httpEquiv?: string;
    key?: string;
}>, {
    autofocus: boolean;
    contenteditable: boolean;
    draggable: boolean;
    hidden: boolean;
    spellcheck: boolean;
}>;
export declare const Style: import("vue").DefineComponent<{
    type: StringConstructor;
    media: StringConstructor;
    nonce: StringConstructor;
    title: StringConstructor;
    /** @deprecated **/
    scoped: {
        type: BooleanConstructor;
        default: any;
    };
    accesskey: StringConstructor;
    autocapitalize: StringConstructor;
    autofocus: {
        type: BooleanConstructor;
        default: any;
    };
    class: StringConstructor;
    contenteditable: {
        type: BooleanConstructor;
        default: any;
    };
    contextmenu: StringConstructor;
    dir: StringConstructor;
    draggable: {
        type: BooleanConstructor;
        default: any;
    };
    enterkeyhint: StringConstructor;
    exportparts: StringConstructor;
    hidden: {
        type: BooleanConstructor;
        default: any;
    };
    id: StringConstructor;
    inputmode: StringConstructor;
    is: StringConstructor;
    itemid: StringConstructor;
    itemprop: StringConstructor;
    itemref: StringConstructor;
    itemscope: StringConstructor;
    itemtype: StringConstructor;
    lang: StringConstructor;
    part: StringConstructor;
    slot: StringConstructor;
    spellcheck: {
        type: BooleanConstructor;
        default: any;
    };
    style: StringConstructor;
    tabindex: StringConstructor;
    translate: StringConstructor;
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>[], unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    type?: unknown;
    media?: unknown;
    nonce?: unknown;
    title?: unknown;
    scoped?: unknown;
    accesskey?: unknown;
    autocapitalize?: unknown;
    autofocus?: unknown;
    class?: unknown;
    contenteditable?: unknown;
    contextmenu?: unknown;
    dir?: unknown;
    draggable?: unknown;
    enterkeyhint?: unknown;
    exportparts?: unknown;
    hidden?: unknown;
    id?: unknown;
    inputmode?: unknown;
    is?: unknown;
    itemid?: unknown;
    itemprop?: unknown;
    itemref?: unknown;
    itemscope?: unknown;
    itemtype?: unknown;
    lang?: unknown;
    part?: unknown;
    slot?: unknown;
    spellcheck?: unknown;
    style?: unknown;
    tabindex?: unknown;
    translate?: unknown;
} & {} & {
    nonce?: string;
    type?: string;
    accesskey?: string;
    autocapitalize?: string;
    autofocus?: boolean;
    class?: string;
    contenteditable?: boolean;
    contextmenu?: string;
    dir?: string;
    draggable?: boolean;
    enterkeyhint?: string;
    exportparts?: string;
    hidden?: boolean;
    id?: string;
    inputmode?: string;
    is?: string;
    itemid?: string;
    itemprop?: string;
    itemref?: string;
    itemscope?: string;
    itemtype?: string;
    lang?: string;
    part?: string;
    slot?: string;
    spellcheck?: boolean;
    style?: string;
    tabindex?: string;
    title?: string;
    translate?: string;
    media?: string;
    scoped?: boolean;
}>, {
    autofocus: boolean;
    contenteditable: boolean;
    draggable: boolean;
    hidden: boolean;
    spellcheck: boolean;
    scoped: boolean;
}>;
export declare const Head: import("vue").DefineComponent<{}, import("vue").Slot, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{} & {} & {}>, {}>;
export declare const Html: import("vue").DefineComponent<{
    manifest: StringConstructor;
    version: StringConstructor;
    xmlns: StringConstructor;
    accesskey: StringConstructor;
    autocapitalize: StringConstructor;
    autofocus: {
        type: BooleanConstructor;
        default: any;
    };
    class: StringConstructor;
    contenteditable: {
        type: BooleanConstructor;
        default: any;
    };
    contextmenu: StringConstructor;
    dir: StringConstructor;
    draggable: {
        type: BooleanConstructor;
        default: any;
    };
    enterkeyhint: StringConstructor;
    exportparts: StringConstructor;
    hidden: {
        type: BooleanConstructor;
        default: any;
    };
    id: StringConstructor;
    inputmode: StringConstructor;
    is: StringConstructor;
    itemid: StringConstructor;
    itemprop: StringConstructor;
    itemref: StringConstructor;
    itemscope: StringConstructor;
    itemtype: StringConstructor;
    lang: StringConstructor;
    nonce: StringConstructor;
    part: StringConstructor;
    slot: StringConstructor;
    spellcheck: {
        type: BooleanConstructor;
        default: any;
    };
    style: StringConstructor;
    tabindex: StringConstructor;
    title: StringConstructor;
    translate: StringConstructor;
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>[], unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    manifest?: unknown;
    version?: unknown;
    xmlns?: unknown;
    accesskey?: unknown;
    autocapitalize?: unknown;
    autofocus?: unknown;
    class?: unknown;
    contenteditable?: unknown;
    contextmenu?: unknown;
    dir?: unknown;
    draggable?: unknown;
    enterkeyhint?: unknown;
    exportparts?: unknown;
    hidden?: unknown;
    id?: unknown;
    inputmode?: unknown;
    is?: unknown;
    itemid?: unknown;
    itemprop?: unknown;
    itemref?: unknown;
    itemscope?: unknown;
    itemtype?: unknown;
    lang?: unknown;
    nonce?: unknown;
    part?: unknown;
    slot?: unknown;
    spellcheck?: unknown;
    style?: unknown;
    tabindex?: unknown;
    title?: unknown;
    translate?: unknown;
} & {} & {
    nonce?: string;
    accesskey?: string;
    autocapitalize?: string;
    autofocus?: boolean;
    class?: string;
    contenteditable?: boolean;
    contextmenu?: string;
    dir?: string;
    draggable?: boolean;
    enterkeyhint?: string;
    exportparts?: string;
    hidden?: boolean;
    id?: string;
    inputmode?: string;
    is?: string;
    itemid?: string;
    itemprop?: string;
    itemref?: string;
    itemscope?: string;
    itemtype?: string;
    lang?: string;
    part?: string;
    slot?: string;
    spellcheck?: boolean;
    style?: string;
    tabindex?: string;
    title?: string;
    translate?: string;
    manifest?: string;
    version?: string;
    xmlns?: string;
}>, {
    autofocus: boolean;
    contenteditable: boolean;
    draggable: boolean;
    hidden: boolean;
    spellcheck: boolean;
}>;
export declare const Body: import("vue").DefineComponent<{
    accesskey: StringConstructor;
    autocapitalize: StringConstructor;
    autofocus: {
        type: BooleanConstructor;
        default: any;
    };
    class: StringConstructor;
    contenteditable: {
        type: BooleanConstructor;
        default: any;
    };
    contextmenu: StringConstructor;
    dir: StringConstructor;
    draggable: {
        type: BooleanConstructor;
        default: any;
    };
    enterkeyhint: StringConstructor;
    exportparts: StringConstructor;
    hidden: {
        type: BooleanConstructor;
        default: any;
    };
    id: StringConstructor;
    inputmode: StringConstructor;
    is: StringConstructor;
    itemid: StringConstructor;
    itemprop: StringConstructor;
    itemref: StringConstructor;
    itemscope: StringConstructor;
    itemtype: StringConstructor;
    lang: StringConstructor;
    nonce: StringConstructor;
    part: StringConstructor;
    slot: StringConstructor;
    spellcheck: {
        type: BooleanConstructor;
        default: any;
    };
    style: StringConstructor;
    tabindex: StringConstructor;
    title: StringConstructor;
    translate: StringConstructor;
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>[], unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    accesskey?: unknown;
    autocapitalize?: unknown;
    autofocus?: unknown;
    class?: unknown;
    contenteditable?: unknown;
    contextmenu?: unknown;
    dir?: unknown;
    draggable?: unknown;
    enterkeyhint?: unknown;
    exportparts?: unknown;
    hidden?: unknown;
    id?: unknown;
    inputmode?: unknown;
    is?: unknown;
    itemid?: unknown;
    itemprop?: unknown;
    itemref?: unknown;
    itemscope?: unknown;
    itemtype?: unknown;
    lang?: unknown;
    nonce?: unknown;
    part?: unknown;
    slot?: unknown;
    spellcheck?: unknown;
    style?: unknown;
    tabindex?: unknown;
    title?: unknown;
    translate?: unknown;
} & {} & {
    nonce?: string;
    accesskey?: string;
    autocapitalize?: string;
    autofocus?: boolean;
    class?: string;
    contenteditable?: boolean;
    contextmenu?: string;
    dir?: string;
    draggable?: boolean;
    enterkeyhint?: string;
    exportparts?: string;
    hidden?: boolean;
    id?: string;
    inputmode?: string;
    is?: string;
    itemid?: string;
    itemprop?: string;
    itemref?: string;
    itemscope?: string;
    itemtype?: string;
    lang?: string;
    part?: string;
    slot?: string;
    spellcheck?: boolean;
    style?: string;
    tabindex?: string;
    title?: string;
    translate?: string;
}>, {
    autofocus: boolean;
    contenteditable: boolean;
    draggable: boolean;
    hidden: boolean;
    spellcheck: boolean;
}>;
